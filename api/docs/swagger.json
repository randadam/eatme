{
    "swagger": "2.0",
    "info": {
        "description": "API for the EatMe recipe generation service",
        "title": "EatMe API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/generate": {
            "get": {
                "description": "Generate a new recipe (not yet implemented)",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "recipes"
                ],
                "summary": "Generate a recipe",
                "responses": {
                    "200": {
                        "description": "Recipe generation message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/preferences": {
            "get": {
                "description": "Retrieve preferences for a user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user preferences",
                "parameters": [
                    {
                        "type": "string",
                        "example": "usr_123456789",
                        "description": "User ID",
                        "name": "X-User-ID",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Preferences"
                        }
                    },
                    "401": {
                        "description": "Missing user ID",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update or create preferences for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Set user preferences",
                "parameters": [
                    {
                        "type": "string",
                        "example": "usr_123456789",
                        "description": "User ID",
                        "name": "X-User-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "User preferences",
                        "name": "preferences",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Preferences"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Preferences"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing user ID",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Register a new user with name and email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user account",
                "parameters": [
                    {
                        "description": "User signup information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SignupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SignupResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Allergy": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "severity": {
                    "$ref": "#/definitions/models.AllergySeverity"
                }
            }
        },
        "models.AllergySeverity": {
            "type": "string",
            "enum": [
                "mild",
                "moderate",
                "severe",
                "anaphylactic"
            ],
            "x-enum-varnames": [
                "SeverityMild",
                "SeverityModerate",
                "SeveritySevere",
                "SeverityAnaphylactic"
            ]
        },
        "models.DietRestriction": {
            "type": "string",
            "enum": [
                "omnivore",
                "vegetarian",
                "vegan",
                "pescatarian",
                "keto",
                "paleo",
                "low_fodmap",
                "other"
            ],
            "x-enum-varnames": [
                "DietOmnivore",
                "DietVegetarian",
                "DietVegan",
                "DietPescatarian",
                "DietKeto",
                "DietPaleo",
                "DietLowFODMAP",
                "DietOther"
            ]
        },
        "models.Goals": {
            "type": "object",
            "properties": {
                "limit_calories": {
                    "type": "integer"
                },
                "macros_target": {
                    "$ref": "#/definitions/models.Macros"
                },
                "notes": {
                    "type": "string"
                }
            }
        },
        "models.Macros": {
            "type": "object",
            "properties": {
                "carbs_grams": {
                    "type": "integer"
                },
                "fat_grams": {
                    "type": "integer"
                },
                "protein_grams": {
                    "type": "integer"
                }
            }
        },
        "models.Preferences": {
            "type": "object",
            "properties": {
                "allergies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Allergy"
                    }
                },
                "diet_restrictions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DietRestriction"
                    }
                },
                "goals": {
                    "$ref": "#/definitions/models.Goals"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.SignupRequest": {
            "description": "User signup request",
            "type": "object",
            "properties": {
                "email": {
                    "description": "User's email address",
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "name": {
                    "description": "User's full name",
                    "type": "string",
                    "example": "John Doe"
                }
            }
        },
        "models.SignupResponse": {
            "description": "User signup response containing the new user's ID",
            "type": "object",
            "properties": {
                "user_id": {
                    "description": "Unique identifier for the created user",
                    "type": "string",
                    "example": "usr_123456789"
                }
            }
        }
    }
}
// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/login": {
            "post": {
                "description": "Log in to an existing user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Log in",
                "operationId": "login",
                "parameters": [
                    {
                        "description": "User login information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "description": "Gets the profile for a user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user profile",
                "operationId": "getProfile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Profile"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    }
                }
            },
            "put": {
                "description": "Save a user's profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Save user profile",
                "operationId": "saveProfile",
                "parameters": [
                    {
                        "description": "User profile",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProfileUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Profile"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    }
                }
            }
        },
        "/recipes": {
            "get": {
                "description": "Get all recipes for user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recipe"
                ],
                "summary": "Get all recipes for user",
                "operationId": "getAllRecipes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.UserRecipe"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    }
                }
            }
        },
        "/recipes/{recipeId}": {
            "get": {
                "description": "Get recipe by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recipe"
                ],
                "summary": "Get recipe by ID",
                "operationId": "getRecipe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Recipe ID",
                        "name": "recipeId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserRecipe"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "404": {
                        "description": "Recipe not found",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete recipe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recipe"
                ],
                "summary": "Delete recipe",
                "operationId": "deleteRecipe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Recipe ID",
                        "name": "recipeId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserRecipe"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "404": {
                        "description": "Recipe not found",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    }
                }
            }
        },
        "/recipes/{recipeId}/modify/accept": {
            "post": {
                "description": "Accept a recipe modification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "thread"
                ],
                "summary": "Accept a recipe modification",
                "operationId": "acceptRecipeModification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Recipe ID",
                        "name": "recipeId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Recipe modified"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "404": {
                        "description": "Thread not found",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    }
                }
            }
        },
        "/recipes/{recipeId}/modify/chat": {
            "post": {
                "description": "Modify a recipe via chat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "thread"
                ],
                "summary": "Modify a recipe via chat",
                "operationId": "modifyRecipe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Recipe ID",
                        "name": "recipeId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Modify recipe via chat request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ModifyRecipeViaChatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ModifyRecipeResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "404": {
                        "description": "Thread not found",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    }
                }
            }
        },
        "/recipes/{recipeId}/modify/reject": {
            "post": {
                "description": "Reject a recipe modification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "thread"
                ],
                "summary": "Reject a recipe modification",
                "operationId": "rejectRecipeModification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Recipe ID",
                        "name": "recipeId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Recipe modified"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "404": {
                        "description": "Thread not found",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Register a new user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user account",
                "operationId": "signup",
                "parameters": [
                    {
                        "description": "User signup information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SignupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SignupResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "409": {
                        "description": "Email already exists",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    }
                }
            }
        },
        "/thread/suggest": {
            "post": {
                "description": "Start a new suggestion thread",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "thread"
                ],
                "summary": "Start a new suggestion thread",
                "operationId": "startSuggestionThread",
                "parameters": [
                    {
                        "description": "Suggestion thread request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.StartSuggestionThreadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ThreadState"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    }
                }
            }
        },
        "/thread/{threadId}": {
            "get": {
                "description": "Get a thread",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "thread"
                ],
                "summary": "Get a thread",
                "operationId": "getThread",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thread ID",
                        "name": "threadId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ThreadState"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "404": {
                        "description": "Thread not found",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    }
                }
            }
        },
        "/thread/{threadId}/accept/{suggestionId}": {
            "post": {
                "description": "Accept a suggestion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "thread"
                ],
                "summary": "Accept a suggestion",
                "operationId": "acceptSuggestion",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thread ID",
                        "name": "threadId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Suggestion ID",
                        "name": "suggestionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserRecipe"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "404": {
                        "description": "Thread not found",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    }
                }
            }
        },
        "/thread/{threadId}/question": {
            "post": {
                "description": "Answer a cooking question",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "thread"
                ],
                "summary": "Answer a cooking question",
                "operationId": "answerCookingQuestion",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thread ID",
                        "name": "threadId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Answer cooking question request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AnswerCookingQuestionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AnswerCookingQuestionResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    }
                }
            }
        },
        "/thread/{threadId}/suggest": {
            "post": {
                "description": "Get new recipe suggestions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "thread"
                ],
                "summary": "Get new suggestions",
                "operationId": "getNewSuggestions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thread ID",
                        "name": "threadId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Get new suggestions request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GetNewSuggestionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.RecipeSuggestion"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "404": {
                        "description": "Thread not found",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.APIError": {
            "description": "APIError represents an API error response",
            "type": "object",
            "required": [
                "code",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "details": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.AnswerCookingQuestionRequest": {
            "description": "AnswerCookingQuestionRequest represents a request to answer a cooking question",
            "type": "object",
            "required": [
                "question"
            ],
            "properties": {
                "question": {
                    "type": "string"
                }
            }
        },
        "models.AnswerCookingQuestionResponse": {
            "description": "AnswerCookingQuestionResponse represents a response to an answer cooking question",
            "type": "object",
            "required": [
                "answer"
            ],
            "properties": {
                "answer": {
                    "type": "string"
                }
            }
        },
        "models.ChatMessage": {
            "description": "ChatMessage represents a message in the chat history",
            "type": "object",
            "required": [
                "message",
                "source"
            ],
            "properties": {
                "message": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                }
            }
        },
        "models.DiffStep": {
            "description": "DiffStep represents a step in a recipe with information about the type of change",
            "type": "object",
            "required": [
                "is_new",
                "step"
            ],
            "properties": {
                "is_new": {
                    "type": "boolean"
                },
                "step": {
                    "type": "string"
                }
            }
        },
        "models.GetNewSuggestionsRequest": {
            "description": "GetNewSuggestionsRequest represents a request to get new suggestions",
            "type": "object",
            "properties": {
                "prompt": {
                    "type": "string"
                }
            }
        },
        "models.Ingredient": {
            "description": "Ingredient represents an ingredient in a recipe",
            "type": "object",
            "required": [
                "name",
                "quantity",
                "unit"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Flour"
                },
                "quantity": {
                    "type": "number",
                    "example": 1
                },
                "unit": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.MeasurementUnit"
                        }
                    ],
                    "example": "cup"
                }
            }
        },
        "models.LoginRequest": {
            "description": "LoginRequest represents the user login request payload",
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "description": "User's email address",
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "Password123!"
                }
            }
        },
        "models.LoginResponse": {
            "description": "LoginResponse represents the user login response",
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "description": "Access token for user",
                    "type": "string",
                    "example": "\u003cJWT_TOKEN\u003e"
                }
            }
        },
        "models.MeasurementUnit": {
            "type": "string",
            "enum": [
                "g",
                "ml",
                "tsp",
                "tbsp",
                "cup",
                "oz",
                "lb",
                "count"
            ],
            "x-enum-varnames": [
                "MeasurementUnitGram",
                "MeasurementUnitMilliliter",
                "MeasurementUnitTeaspoon",
                "MeasurementUnitTablespoon",
                "MeasurementUnitCup",
                "MeasurementUnitOunce",
                "MeasurementUnitPound",
                "MeasurementUnitCount"
            ]
        },
        "models.ModifiedIngredient": {
            "description": "ModifiedIngredient represents a modification to an ingredient",
            "type": "object",
            "required": [
                "index",
                "name",
                "quantity",
                "unit"
            ],
            "properties": {
                "index": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "Flour"
                },
                "quantity": {
                    "type": "number",
                    "example": 1
                },
                "unit": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.MeasurementUnit"
                        }
                    ],
                    "example": "cup"
                }
            }
        },
        "models.ModifyRecipeResponse": {
            "description": "ModifyRecipeResponse represents the response to a recipe modification",
            "type": "object",
            "required": [
                "current_recipe",
                "diff",
                "response_text"
            ],
            "properties": {
                "current_recipe": {
                    "$ref": "#/definitions/models.RecipeBody"
                },
                "diff": {
                    "$ref": "#/definitions/models.RecipeDiff"
                },
                "response_text": {
                    "type": "string"
                }
            }
        },
        "models.ModifyRecipeViaChatRequest": {
            "description": "ModifyRecipeViaChatRequest represents a request to modify a recipe via chat",
            "type": "object",
            "required": [
                "prompt"
            ],
            "properties": {
                "prompt": {
                    "type": "string"
                }
            }
        },
        "models.Profile": {
            "description": "Profile represents a user's profile information",
            "type": "object",
            "required": [
                "allergies",
                "cuisines",
                "diets",
                "equipment",
                "name",
                "setup_step",
                "skill"
            ],
            "properties": {
                "allergies": {
                    "description": "User's allergies",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cuisines": {
                    "description": "User's cuisines",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "diets": {
                    "description": "User's diet restrictions",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "equipment": {
                    "description": "User's equipment",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "User's name",
                    "type": "string"
                },
                "setup_step": {
                    "description": "Setup Step",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.SetupStep"
                        }
                    ]
                },
                "skill": {
                    "description": "User's skill level",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Skill"
                        }
                    ]
                }
            }
        },
        "models.ProfileUpdateRequest": {
            "description": "ProfileUpdateRequest represents a user's profile update request payload",
            "type": "object",
            "properties": {
                "allergies": {
                    "description": "User's allergies",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cuisines": {
                    "description": "User's cuisines",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "diets": {
                    "description": "User's diet restrictions",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "equipment": {
                    "description": "User's equipment",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "User's name",
                    "type": "string"
                },
                "setup_step": {
                    "description": "Setup Step",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.SetupStep"
                        }
                    ]
                },
                "skill": {
                    "description": "User's skill level",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Skill"
                        }
                    ]
                }
            }
        },
        "models.RecipeBody": {
            "description": "RecipeBody represents the contents of a recipe",
            "type": "object",
            "required": [
                "description",
                "ingredients",
                "servings",
                "steps",
                "title",
                "total_time_minutes"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "A classic Italian dish"
                },
                "image_url": {
                    "type": "string"
                },
                "ingredients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Ingredient"
                    }
                },
                "servings": {
                    "type": "integer",
                    "example": 4
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string",
                    "example": "Veal Bolognese"
                },
                "total_time_minutes": {
                    "type": "integer",
                    "example": 120
                }
            }
        },
        "models.RecipeDiff": {
            "description": "RecipeDiff represents the difference between two recipe versions",
            "type": "object",
            "required": [
                "added_ingredients",
                "modified_ingredients",
                "new_steps",
                "removed_ingredients"
            ],
            "properties": {
                "added_ingredients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Ingredient"
                    }
                },
                "modified_ingredients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ModifiedIngredient"
                    }
                },
                "new_description": {
                    "type": "string"
                },
                "new_servings": {
                    "type": "integer"
                },
                "new_steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DiffStep"
                    }
                },
                "new_title": {
                    "type": "string"
                },
                "new_total_time_minutes": {
                    "type": "integer"
                },
                "removed_ingredients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.RemovedIngredient"
                    }
                }
            }
        },
        "models.RecipeSuggestion": {
            "description": "RecipeSuggestion represents a suggestion for a recipe",
            "type": "object",
            "required": [
                "accepted",
                "created_at",
                "id",
                "rejected",
                "response_text",
                "suggestion",
                "thread_id",
                "updated_at"
            ],
            "properties": {
                "accepted": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "rejected": {
                    "type": "boolean"
                },
                "response_text": {
                    "type": "string"
                },
                "suggestion": {
                    "$ref": "#/definitions/models.RecipeBody"
                },
                "thread_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.RemovedIngredient": {
            "description": "RemovedIngredient represents an ingredient that was removed from a recipe",
            "type": "object",
            "required": [
                "index"
            ],
            "properties": {
                "index": {
                    "type": "integer"
                }
            }
        },
        "models.SetupStep": {
            "type": "string",
            "enum": [
                "profile",
                "skill",
                "cuisines",
                "diet",
                "equipment",
                "allergies",
                "done"
            ],
            "x-enum-varnames": [
                "SetupStepProfile",
                "SetupStepSkill",
                "SetupStepCuisines",
                "SetupStepDiet",
                "SetupStepEquipment",
                "SetupStepAllergies",
                "SetupStepDone"
            ]
        },
        "models.SignupRequest": {
            "description": "SignupRequest represents the user signup request payload",
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "description": "User's email address",
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "Password123!"
                }
            }
        },
        "models.SignupResponse": {
            "description": "SignupResponse represents the user signup response",
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "description": "Access token for user",
                    "type": "string",
                    "example": "\u003cJWT_TOKEN\u003e"
                }
            }
        },
        "models.Skill": {
            "type": "string",
            "enum": [
                "beginner",
                "intermediate",
                "advanced",
                "chef"
            ],
            "x-enum-varnames": [
                "SkillBeginner",
                "SkillIntermediate",
                "SkillAdvanced",
                "SkillChef"
            ]
        },
        "models.StartSuggestionThreadRequest": {
            "description": "StartSuggestionThreadRequest represents a request to start a suggestion thread",
            "type": "object",
            "required": [
                "prompt"
            ],
            "properties": {
                "prompt": {
                    "type": "string"
                }
            }
        },
        "models.ThreadState": {
            "description": "A thread of suggestions for a recipe",
            "type": "object",
            "required": [
                "chat_history",
                "created_at",
                "current_prompt",
                "id",
                "original_prompt",
                "suggestions",
                "updated_at"
            ],
            "properties": {
                "chat_history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ChatMessage"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "current_prompt": {
                    "type": "string"
                },
                "current_recipe": {
                    "$ref": "#/definitions/models.RecipeBody"
                },
                "id": {
                    "type": "string"
                },
                "modified_recipe": {
                    "$ref": "#/definitions/models.RecipeBody"
                },
                "original_prompt": {
                    "type": "string"
                },
                "recipe_id": {
                    "type": "string"
                },
                "suggestions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.RecipeSuggestion"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.UserRecipe": {
            "description": "UserRecipe is the user's personal copy (favorites, edits).",
            "type": "object",
            "required": [
                "created_at",
                "description",
                "id",
                "ingredients",
                "is_favorite",
                "latest_version_id",
                "servings",
                "steps",
                "thread_id",
                "title",
                "total_time_minutes",
                "updated_at",
                "user_id"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "example": "A classic Italian dish"
                },
                "global_recipe_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "ingredients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Ingredient"
                    }
                },
                "is_favorite": {
                    "type": "boolean"
                },
                "latest_version_id": {
                    "type": "string"
                },
                "servings": {
                    "type": "integer",
                    "example": 4
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "thread_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "example": "Veal Bolognese"
                },
                "total_time_minutes": {
                    "type": "integer",
                    "example": 120
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "EatMe API",
	Description:      "API for the EatMe recipe generation service",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}

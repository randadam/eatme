// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/chat/modify/recipes/{recipeId}": {
            "put": {
                "description": "Handle modifying a recipe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Handle modifying a recipe",
                "operationId": "modifyRecipe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Recipe ID",
                        "name": "recipeId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Modify chat request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ModifyChatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ModifyChatResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/chat/question/recipes/{recipeId}": {
            "post": {
                "description": "Handle general chat request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Handle general chat request",
                "operationId": "generalChat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Recipe ID",
                        "name": "recipeId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "General chat request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GeneralChatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GeneralChatResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/chat/suggest": {
            "post": {
                "description": "Handle starting a recipe suggestion chat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Handle starting a recipe suggestion chat",
                "operationId": "suggestRecipe",
                "parameters": [
                    {
                        "description": "Suggest chat request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SuggestChatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuggestChatResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/chat/suggest/{threadId}": {
            "get": {
                "description": "Get suggestion thread",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Get suggestion thread",
                "operationId": "getSuggestionThread",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thread ID",
                        "name": "threadId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuggestionThread"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/chat/suggest/{threadId}/accept/{suggestionId}": {
            "post": {
                "description": "Handle accepting a recipe suggestion",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Handle accepting a recipe suggestion",
                "operationId": "acceptRecipeSuggestion",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thread ID",
                        "name": "threadId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Suggestion ID",
                        "name": "suggestionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserRecipe"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/chat/suggest/{threadId}/next": {
            "post": {
                "description": "Handle getting next recipe suggestion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Handle getting next recipe suggestion",
                "operationId": "nextRecipeSuggestion",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thread ID",
                        "name": "threadId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.RecipeSuggestion"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "description": "Gets the profile for a user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user profile",
                "operationId": "getProfile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Profile"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.InternalServerErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Save a user's profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Save user profile",
                "operationId": "saveProfile",
                "parameters": [
                    {
                        "description": "User profile",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProfileUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Profile"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/models.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/recipes": {
            "get": {
                "description": "Get all recipes for user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recipe"
                ],
                "summary": "Get all recipes for user",
                "operationId": "getAllRecipes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.UserRecipe"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/recipes/{recipe_id}": {
            "get": {
                "description": "Get recipe by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recipe"
                ],
                "summary": "Get recipe by ID",
                "operationId": "getRecipe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Recipe ID",
                        "name": "recipe_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserRecipe"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.InternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Register a new user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user account",
                "operationId": "signup",
                "parameters": [
                    {
                        "description": "User signup information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SignupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SignupResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/models.BadRequestResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.InternalServerErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Allergy": {
            "type": "string",
            "enum": [
                "dairy",
                "eggs",
                "fish",
                "gluten",
                "peanuts",
                "soy",
                "tree_nuts",
                "wheat"
            ],
            "x-enum-varnames": [
                "AllergyDairy",
                "AllergyEggs",
                "AllergyFish",
                "AllergyGluten",
                "AllergyPeanuts",
                "AllergySoy",
                "AllergyTreeNuts",
                "AllergyWheat"
            ]
        },
        "models.BadRequestResponse": {
            "description": "Bad request error response",
            "type": "object",
            "required": [
                "error"
            ],
            "properties": {
                "error": {
                    "description": "Error message",
                    "type": "string",
                    "example": "Invalid input"
                }
            }
        },
        "models.Cuisine": {
            "type": "string",
            "enum": [
                "american",
                "british",
                "chinese",
                "french",
                "german",
                "indian",
                "italian",
                "japanese",
                "mexican",
                "spanish",
                "thai",
                "vietnamese"
            ],
            "x-enum-varnames": [
                "CuisineAmerican",
                "CuisineBritish",
                "CuisineChinese",
                "CuisineFrench",
                "CuisineGerman",
                "CuisineIndian",
                "CuisineItalian",
                "CuisineJapanese",
                "CuisineMexican",
                "CuisineSpanish",
                "CuisineThai",
                "CuisineVietnamese"
            ]
        },
        "models.Diet": {
            "type": "string",
            "enum": [
                "vegetarian",
                "vegan",
                "keto",
                "paleo",
                "low_carb",
                "high_protein"
            ],
            "x-enum-varnames": [
                "DietVegetarian",
                "DietVegan",
                "DietKeto",
                "DietPaleo",
                "DietLowCarb",
                "DietHighProtein"
            ]
        },
        "models.Equipment": {
            "type": "string",
            "enum": [
                "stove",
                "oven",
                "microwave",
                "toaster",
                "grill",
                "smoker",
                "slow_cooker",
                "pressure_cooker",
                "sous_vide"
            ],
            "x-enum-varnames": [
                "EquipmentStove",
                "EquipmentOven",
                "EquipmentMicrowave",
                "EquipmentToaster",
                "EquipmentGrill",
                "EquipmentSmoker",
                "EquipmentSlowCooker",
                "EquipmentPressureCooker",
                "EquipmentSousVide"
            ]
        },
        "models.GeneralChatRequest": {
            "description": "A chat request to the ML backend to answer a question",
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.GeneralChatResponse": {
            "description": "A chat response to the ML backend to answer a question",
            "type": "object",
            "required": [
                "response_text"
            ],
            "properties": {
                "response_text": {
                    "type": "string"
                }
            }
        },
        "models.Ingredient": {
            "type": "object",
            "required": [
                "name",
                "quantity",
                "unit"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Flour"
                },
                "quantity": {
                    "type": "number",
                    "example": 1
                },
                "unit": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.MeasurementUnit"
                        }
                    ],
                    "example": "cup"
                }
            }
        },
        "models.InternalServerErrorResponse": {
            "description": "Internal server error response",
            "type": "object",
            "required": [
                "error"
            ],
            "properties": {
                "error": {
                    "description": "Error message",
                    "type": "string",
                    "example": "Internal server error"
                }
            }
        },
        "models.MeasurementUnit": {
            "type": "string",
            "enum": [
                "g",
                "ml",
                "tsp",
                "tbsp",
                "cup",
                "oz",
                "lb"
            ],
            "x-enum-varnames": [
                "MeasurementUnitGram",
                "MeasurementUnitMilliliter",
                "MeasurementUnitTeaspoon",
                "MeasurementUnitTablespoon",
                "MeasurementUnitCup",
                "MeasurementUnitOunce",
                "MeasurementUnitPound"
            ]
        },
        "models.ModifyChatRequest": {
            "description": "A chat request to the ML backend to modify a recipe",
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.ModifyChatResponse": {
            "description": "A chat response to the ML backend to modify a recipe",
            "type": "object",
            "required": [
                "needs_clarification",
                "new_recipe",
                "response_text"
            ],
            "properties": {
                "needs_clarification": {
                    "type": "boolean"
                },
                "new_recipe": {
                    "$ref": "#/definitions/models.RecipeBody"
                },
                "response_text": {
                    "type": "string"
                }
            }
        },
        "models.Profile": {
            "description": "User profile information",
            "type": "object",
            "required": [
                "allergies",
                "cuisines",
                "diet",
                "equipment",
                "name",
                "setup_step",
                "skill"
            ],
            "properties": {
                "allergies": {
                    "description": "User's allergies",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Allergy"
                    }
                },
                "cuisines": {
                    "description": "User's cuisines",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Cuisine"
                    }
                },
                "diet": {
                    "description": "User's diet restrictions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Diet"
                    }
                },
                "equipment": {
                    "description": "User's equipment",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Equipment"
                    }
                },
                "name": {
                    "description": "User's name",
                    "type": "string"
                },
                "setup_step": {
                    "description": "Setup Step",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.SetupStep"
                        }
                    ]
                },
                "skill": {
                    "description": "User's skill level",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Skill"
                        }
                    ]
                }
            }
        },
        "models.ProfileUpdateRequest": {
            "description": "User profile update request",
            "type": "object",
            "required": [
                "setup_step"
            ],
            "properties": {
                "allergies": {
                    "description": "User's allergies",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Allergy"
                    }
                },
                "cuisines": {
                    "description": "User's cuisines",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Cuisine"
                    }
                },
                "diet": {
                    "description": "User's diet restrictions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Diet"
                    }
                },
                "equipment": {
                    "description": "User's equipment",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Equipment"
                    }
                },
                "name": {
                    "description": "User's name",
                    "type": "string"
                },
                "setup_step": {
                    "description": "Setup Step",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.SetupStep"
                        }
                    ]
                },
                "skill": {
                    "description": "User's skill level",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Skill"
                        }
                    ]
                }
            }
        },
        "models.RecipeBody": {
            "description": "Contents of a recipe",
            "type": "object",
            "required": [
                "description",
                "ingredients",
                "servings",
                "steps",
                "title",
                "total_time_minutes"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "A classic Italian dish"
                },
                "ingredients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Ingredient"
                    }
                },
                "servings": {
                    "type": "integer",
                    "example": 4
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string",
                    "example": "Veal Bolognese"
                },
                "total_time_minutes": {
                    "type": "integer",
                    "example": 120
                }
            }
        },
        "models.RecipeSuggestion": {
            "description": "A suggestion for a recipe",
            "type": "object",
            "required": [
                "accepted",
                "created_at",
                "id",
                "response_text",
                "suggestion",
                "thread_id",
                "updated_at"
            ],
            "properties": {
                "accepted": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "response_text": {
                    "type": "string"
                },
                "suggestion": {
                    "$ref": "#/definitions/models.RecipeBody"
                },
                "thread_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.SetupStep": {
            "type": "string",
            "enum": [
                "profile",
                "skill",
                "cuisines",
                "diet",
                "equipment",
                "allergies",
                "done"
            ],
            "x-enum-varnames": [
                "SetupStepProfile",
                "SetupStepSkill",
                "SetupStepCuisines",
                "SetupStepDiet",
                "SetupStepEquipment",
                "SetupStepAllergies",
                "SetupStepDone"
            ]
        },
        "models.SignupRequest": {
            "description": "User signup request",
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "description": "User's email address",
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "Password123!"
                }
            }
        },
        "models.SignupResponse": {
            "description": "User signup response containing the new user's ID",
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "description": "Access token for user",
                    "type": "string",
                    "example": "\u003cJWT_TOKEN\u003e"
                }
            }
        },
        "models.Skill": {
            "type": "string",
            "enum": [
                "beginner",
                "intermediate",
                "advanced",
                "chef"
            ],
            "x-enum-varnames": [
                "SkillBeginner",
                "SkillIntermediate",
                "SkillAdvanced",
                "SkillChef"
            ]
        },
        "models.SuggestChatRequest": {
            "description": "A chat request to the ML backend to suggest a recipe",
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.SuggestChatResponse": {
            "description": "A chat response to the ML backend to suggest a recipe",
            "type": "object",
            "required": [
                "new_recipe",
                "response_text",
                "thread_id"
            ],
            "properties": {
                "new_recipe": {
                    "$ref": "#/definitions/models.RecipeBody"
                },
                "response_text": {
                    "type": "string"
                },
                "thread_id": {
                    "type": "string"
                }
            }
        },
        "models.SuggestionThread": {
            "description": "A thread of suggestions for a recipe",
            "type": "object",
            "required": [
                "created_at",
                "id",
                "original_prompt",
                "suggestions",
                "updated_at"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "original_prompt": {
                    "type": "string"
                },
                "suggestions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.RecipeSuggestion"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.UnauthorizedResponse": {
            "description": "Unauthorized error response",
            "type": "object",
            "required": [
                "error"
            ],
            "properties": {
                "error": {
                    "description": "Error message",
                    "type": "string",
                    "example": "Unauthorized"
                }
            }
        },
        "models.UserRecipe": {
            "description": "The user's personal copy (favorites, edits).",
            "type": "object",
            "required": [
                "created_at",
                "description",
                "id",
                "ingredients",
                "is_favorite",
                "latest_version_id",
                "servings",
                "steps",
                "title",
                "total_time_minutes",
                "updated_at",
                "user_id"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "example": "A classic Italian dish"
                },
                "global_recipe_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ingredients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Ingredient"
                    }
                },
                "is_favorite": {
                    "type": "boolean"
                },
                "latest_version_id": {
                    "type": "string"
                },
                "servings": {
                    "type": "integer",
                    "example": 4
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string",
                    "example": "Veal Bolognese"
                },
                "total_time_minutes": {
                    "type": "integer",
                    "example": 120
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "EatMe API",
	Description:      "API for the EatMe recipe generation service",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
